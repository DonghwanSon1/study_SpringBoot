@Primary, @Qualifier 활용
- 코드에서 자주 사용하는 메인 데이터베이스의 커넥션을 획득하는 스프링 빈이 있고, 코드에서 틑ㄱ별한 기능으로 가끔 사용하는
  서브 데이터베이스의 커넥션을 획득하는 스프링 빈이 있다고 생각해본다면, 메인 데이터베이스의 커넥션을 획득하는 스프링 빈은
  @Primary를 적용해서 조회하는 곳에서 @Qualifier 지정 없이 편리하게 조회하고, 서브 데이터베이스 커넥션 빈을 획득 할때는 
  @Qualifier를 지정해서 명시적으로 획득 하는 방식으로 사용하면 코드를 깔끔하게 유지할 수 있다. 물론 이때 메인 데이터베이스의
  스프링 빈을 등록할 때 @Qualifier를 지정해주는 것은 상관 없다.

우선순위
- @Primary는 기본값 처럼 동작하는 것이고, @Quilifier는 매우 상세하게 동작한다.
  이런 경우 어떤 것이 우선권을 가지게 되냐면 스프링은 자동보다는 수동이, 넓은 범위의
  선택권 보다는 좁은 범위의 선택권이 우선 순위가 높다. 따라서 여기서도 @Quilifier가 우선권이 높다.