뷰 라우터 (Vue Router)
 - 뷰 라우터는 Vue.js를 이용하여 싱글 페이지 애플리케이션(SPA)을 구현할때 사용하는 Vue.js의 공식 라우터 이다.

라우터란? (Router)
 - 라우터라고 하면 일반적으로 네트워크간에 데이터를 전송하는 장치를 말한다. 뷰에서 말하는 라우터는 쉽게 말해서 URL에 따라 어떤 페이지를 보여줄지 매핑해주는 라이브러리라고 보면 된다.
 - 예를 들어 "'/home' 경로로 요청이 들어왔을때 'Home.vue' 컴포넌트를 화면에 렌더링 해라!" 라는 역할을 수행하는 라이브러리라고 보면 된다. 
 - 그리고 이때 '/home' -> 'Home.vue' 이러한 매핑정보를 라우트(Route)라고도 한다.

라우트란? (Route)
 - 어떤 URL에 대해 어떤 페이지를 표시해야 하는지에 대한 정보

설치
 - 터미널에 'npm install vue-router' 설치한다.

사용 
 - main.js에서 app.use(router)를 호출하고 위에 router를 import 시켜준다.

네이게이션
 - 뷰 라우터를 HTML과 JavaScript로 사용하는 방법
    HTML
    - <RouterLink>
      - Vue Router에서는 페이지를 이동할때는 일반 a 태그를 사용하는 대신 커스텀 컴포넌트인 <RouterLink>를 사용하여 다른 페이지 링크를 만들어야 한다.
      - 이를 통해 Vue Router는 페이지를 리로딩 하지 않고 URL에 매핑된 페이지를 렌더링 할 수 있다. (AJAX 같은거 같다.)
    - <RouterView>
      - <RouterView>는 URL에 매핑된 컴포넌트를 화면에 표시한다.
    JavaScript
    - 위에서 router를 설정할 때 app.use(router)를 호출했다. 이렇게 호출 함으로써 모든 자식 컴포넌트에 router, route 같은 객체를 사용할 수 있다.
    - 그리고 이러한 객체는 페이지 이동 또는 현재 활성 라우트(경로 매핑)정보에 접근하는데 사용할 수 있다.
    - router
      - 라우터 인스턴스로 JavaScript에서 다른 페이지(컴포넌트)로 이동할 수 있다.
        - Options API : this.$router
        - Composition API : useRouter()
        - template : $router
    - route
      - 현재 활성 라우트 정보에 접근할 수 있다. (이 속성은 읽기 전용이다.)
        - Options API : this.$route
        - Composition API : useRoute()
        - template : $route









