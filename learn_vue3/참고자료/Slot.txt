Slot 
 - HTML 요소와 마찬가지로 우리가 만든 컴포넌트에 콘텐츠를 전달 할 수 있으면 유용하다.
 - 자식 컴포넌트에 <slot></slot>을 넣어주고 사용하면 된다.
 - <slot> 요소는 부모 컴포넌트에서 제공하는 콘텐츠를 나타내는 슬롯 콘텐츠이다. 그리고 슬롯은 텍스트 뿐만 아니라 HTML 요소, 컴포넌트 등 다양한 모든 콘텐츠가 될 수 있다.
 - 즉, 부모에서 자식 컴포넌트를 임포트 후 탬플릿 등록 후 탬플릿 사용하는 태그 사이에 쓴 콘텐츠들이 자식 컴포넌트의 <slot>태그가 부모 컴포넌트에서 작성한걸로 변경되는 형식이다.

Fallback Content
 - 상위 컴포넌트에서 슬롯 콘텐츠가 제공되지 않을때 슬롯에 대한 폴백(기본콘텐츠)을 지정할 수 있다.

Named Slots
 - <slot> 요소에 이름을 부여하여 여러개의 <slot>을 정의할 수 있다.
 - <slot> 에 name 속성을 부여하여 특정 슬롯 콘텐츠가 렌더링 되어야 할 위치를 설정할 수 있다.
 - name이 없는 <slot>의 이름은 암시적으로 default이다.
 - name이 부여된 <slot>에 콘텐츠를 전달하려면 v-slot 디렉티브를 사용하여 전달할 수 있다. 그리고 v-slot:전달인자 를 사용하여 슬롯 콘텐츠에 전달할 수 있다. 
 - 또한, v-slot은 #으로 단축 표현 할 수 있다.

Dynamic Slot Named
 - v-slot 디렉티브 전달인자에 데이터를 바인딩하여 동적으로 변경할 수도 있다.
 
Render Scope
 - 슬롯 콘텐츠는 상위 컴포넌트에 정의되어 있으므로 상위 컴포넌트의 데이터 영역에 접근은 가능하지만 하위 컴포넌트의 영역에는 접근할 수 없다.

Scoped Slots
 - Render Scope에서 언급했던 것처럼 슬롯 콘텐츠는 자식 컴포넌트의 데이터에 접근할 수 없다.
 - 하지만 슬롯 콘텐츠에서 상위 컴포넌트와 하위 컴포넌트 데이터를 모두 사용할 수 있다면 우리는 개발할때 매우 유용할것이다.
 - 이러한 방법으로 우리는 자식 컴포넌트에서 <slot> 요소를 사용할 때 props를 전달하는 것처럼 속성을 슬롯 콘텐츠에 전달할 수 있다.
 - default <slot> 이 하나밖에 없는경우에는 v-slot 디렉티브를 사용하여 props를 전달 받을 수 있다.
 - 자식 컴포넌트에서 <slot> 태그 안에 name 및 전달할 변수="전달내용"을 적고 부모 컴포넌트에서 그 변수(데이터)를 사용하기 위해 #이름="{ 전달할 변수 }">{{ 전달할 변수 }} 를 사용하면 부모 컴포넌트에서도 자식 컴포넌트의 데이터를 사용할 수 있게 된다.














