Component(컴포넌트)
 - 자바스크립트에서 재사용할 수 있도록 코드를 분리한 파일을 모듈이라고 한다. 
 - Vue에서도 마찬가지로 UI(HTML, CSS, JS)를 재사용할 수 있도록 정의한 것을 '컴포넌트'라 한다.

컴포넌트를 사용하는 이유
 - 컴포넌트를 사용하면 UI를 재사용 할 수 있다.
   - 프론트엔드 개발을 하다보면 JavaScript 뿐만 아니라 HTML, CSS를 반복적으로 사용 할 때가 많다.
   - 이런 경우 컴포넌트로 캡슐화 한 후 필요한 곳에서 사용할 수 있다.
 - 컴포넌트를 사용하여 UI를 독립적으로 나눔으로써(레이아웃 등) 코드를 클린하게 할 수 있다.
   - 프론트엔드 개발을 하다보면 코드가 길어져 유지보수가 힘들다.
   - 이런경우 컴포넌트로 독립적으로 분리함으로써 코드를 클린하게 하여 유지보수를 보다 쉽게 할 수 있다.

컴포넌트 만들기
 - 컴포넌트를 만들고 사용하는 단계를 3단계로 나눈다.
   - 컴포넌트 정의 -> 컴포넌트 등록 -> 컴포넌트 사용

 - 컴포넌트 정의 : 컴포넌트 어떤 방법으로 정의 하느냐에 따라 문자열 템플릿, Single-File Component 두가지 방법이 있다.
   - Sing-File Component(SFC)
     - 빌드 도구를 사용 할때 컴포넌트는 일반적으로 Single-File Component(SFC)로 정의할 수 있다. 
     - SFC는 확장자 *.vue를 가진 단일 파일이다.
     - 실무에서 일반적으로 사용하는 방법이다.
     - 단축키 vbase-3의 템플릿으로 사용한다. 
   - 문자열 템플릿(string template)
     - 빌드 도구를 사용하지 않을때 컴포넌트 Vue 옵션인을 포함하는 일반 JavaScript 객체로 정의할 수 있다.
     - export default {} 안에 template: ``으로 사용하는 방법
 
 - 컴포넌트 등록 : Vue 컴포넌트는 <template> 안에서 발견 되었을때 Vue가 구현 위치를 알 수 있도록 "등록"을 해야한다. 그리고 컴포넌트를 등록하는 방법은 전역(Global) 및 지역(Local) 두가지 있다.
   - 전역 등록(Global Registration)
     - 우리는 app.component() 메서드를 사용하여 현재 Vue 애플리케이션에서 전역적으로 사용 할 수 있도록 할 수 있다.
     - 전역 등록은 등록된 컴포넌트는 애플리케이션 어떤 곳에서든 사용 가능하다.
     - main.js 에서 위에 import 란에 import 해주고, mount하기 전에 app.component하여 import 한 이름명을 적어서 전역등록 한다.
     - 하지만 전역등록은 편리하지만 몇가지의 단점이 있다.
       - Webpack(또는 Vite)과 같은 빌드 시스템을 사용하는 경우 컴포넌트를 전역 등록하는 것은 컴포넌트를 사용하지 않더라도 계속해서 최종 빌드에 해당 컴포넌트가 포함되는 것을 의미한다. 이는 사용자가 다운로드하는 자바스크립트 파일의 크기를 불필요하게 증가시킨다.
       - 전역 등록을 계속 하게 되면 애플리케이션의 컴포넌트간 종속 관계를 확인하기 힘들다. 상위컴포넌트, 하위컴포넌트 구분이 힘들면 유지보수를 하기에 매우 어려워지게 된다.
   - 지역 등록(Local Registration)
     - 지역 등록된 컴포넌트는 현재 컴포넌트 영역 안에서만 사용 할 수 있다. Vue 컴포넌트 인스턴스의 components 옵션을 사용해서 등록 할 수 있다.
     - ParentComponent 컴포넌트에 로컬 등록된 ChildComponent는 현재 컴포넌트인 ParentComponent 컴포넌트에서만 사용 가능하다.
     - <script>안에 import를 넣고 component: {} 옵션을 줘 안에다가 import한 이름명을 적어 지역등록한다.
  
 - 컴포넌트 사용 : 등록된 컴포넌트는 <template>에서 원하는 만큼 사용할 수 있다. 그리고 컴포넌트는 사용할 때마다 해당 컴포넌트의 새 인스턴스가 생성된다. 즉, 사용할 때마다 setup()함수가 실행된다는 것을 의미한다.
   - 사용 할때 (import 된 컴포넌트를 사용할때) PascalCase(TheView = 첫번째 알파벳의 대문자)를 사용하는 것이 좋다. 
   - 파스칼케이스 말고도 케밥케이스(the-view 막대기를 붙여 연결) 방식도 가능하다.
   - 하지만 파스칼케이스로 사용하는 것을 Vue에서 추천한다고 한다.


